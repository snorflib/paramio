name: Test
on: workflow_call

jobs:
  tests:
    name: Test
    runs-on: ${{ matrix.os }}

    strategy:
      max-parallel: 5
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.10", "3.11", "3.12", "3.13"]

    env:
      UV_CACHE_DIR:  /tmp/.uv-cache

    steps:
      - uses: actions/checkout@v4

      - name: Install UV
        uses: astral-sh/setup-uv@v2
        with:
          enable-cache: true
          cache-local-path: ${{ env.UV_CACHE_DIR }}

      - name: UV Cache
        id: cache-uv
        uses: actions/cache@v4
        with:
          path: ${{ env.UV_CACHE_DIR }}
          key: uv-${{ matrix.os }}-${{ matrix.python-version }}-${{ hashFiles('uv.lock') }}
          restore-keys: |
            uv-${{ matrix.os }}-${{ matrix.python-version }}-${{ hashFiles('uv.lock') }}
            uv-${{ matrix.os }}-${{ matrix.python-version }}

      - name: Minimize UV Cache
        run: uv cache prune --ci

      - name: Install Python-${{ matrix.python-version }}
        run: |
          uv python install ${{ matrix.python-version }}
          uv venv --python ${{ matrix.python-version }}

      - name: Install Dependencies
        run: |
          uv sync --dev

      - name: Ruff | Mypy Checks
        run: |
          uv run ruff check . --no-fix
          uv run mypy --no-warn-unused-ignores . 
      
      - name: Run Tests
        run: |
          uv run pytest -s tests/ --tb=long --junitxml=~/junit/test-results-${{ matrix.os }}-${{ matrix.python-version }}.xml

      - name: Upload Test Results
        if: always()

        uses: actions/upload-artifact@v4
        with:
          name: tests-${{ matrix.os }}-${{ matrix.python-version }}
          path: ~/junit/test-results-${{ matrix.os }}-${{ matrix.python-version }}.xml
