name: Run Tests

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main

jobs:
  tests:
    name: Run Tests
    runs-on: ${{ matrix.os }}

    strategy:
      max-parallel: 5
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.10", "3.11", "3.12", "3.13"]

    steps:
    - uses: actions/checkout@v4

    - name: install uv
      uses: astral-sh/setup-uv@v2

    - name: uv cache
      id: cache-uv
      uses: astral-sh/setup-uv@v2
      env:
        cache-name: cache-uv-deps
      with:
        enable-cache: true
        path: ~/.uv-cache
        key: uv-${{ matrix.os }}-${ matrix.python-version }-${{ hashFiles('uv.lock') }}
        restore-keys: |
          uv-${{ matrix.os }}-${ matrix.python-version }-${{ hashFiles('uv.lock') }}
          uv-${{ matrix.os }}-${ matrix.python-version }
          uv-${{ matrix.os }}

    - name: Minimize uv cache
      run: uv cache prune --ci

    - name: install python-${{ matrix.python-version }}
      run: |
        uv python install ${{ matrix.python-version }}
        uv venv --python ${{ matrix.python-version }}

    - name: install dependencies
      run: |
        uv sync --dev

    - name: ruff | mypy checks
      run: |
        uv run ruff check . --no-fix
        uv run mypy --no-warn-unused-ignores . 
      
    - name: run tests
      run: |
        uv run pytest -s tests/ --tb=long --junitxml=junit/test-results-${{ matrix.os }}-${{ matrix.python-version }}.xml

    - name: upload test results
      uses: actions/upload-artifact@v4
      with:
        name: pytest-results-${{ matrix.python-version }}
        path: junit/test-results-${{ matrix.python-version }}.xml
        if: always()
