name: Publish

on:
  workflow_call:
    inputs:
      production:
        required: true
        type: boolean
        default: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install UV
        uses: astral-sh/setup-uv@v2

      - name: Build Package
        run: uv build

      - name: Archive build
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist
          retention-days: 1

  test-pypi:
    runs-on: ubuntu-latest
    needs: [build]
    if: ${{ !inputs.production }}

    steps:
      - uses: actions/checkout@v4

      - name: Get UV
        uses: astral-sh/setup-uv@v2

      - name: Install Dependencies
        run: |
          uv add --no-sync twine

      - name: Download build
        uses: actions/download-artifact@v4
        with:
          name: dist 
          path: dist

      - run: |
          echo '::add-mask::${{ secrets.PYPI_TEST_API_TOKEN }}'

      - name: Publish
        run: |
          uv run twine upload \
            -r testpypi \
            --non-interactive \
            --comment "What a sigma" \
            --verbose \
            dist/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TEST_API_TOKEN }}

  prod-pypi:
    runs-on: ubuntu-latest
    needs: [build]
    if: ${{ inputs.production }}

    steps:
      - uses: actions/checkout@v4

      - name: Download build
        uses: actions/download-artifact@v4
        with:
          name: dist

      - name: Get UV
        uses: astral-sh/setup-uv@v2

      - name: Publish
        run: |
          uv publish --username __token__ --password ${{ secrets.PYPI_API_TOKEN }}
